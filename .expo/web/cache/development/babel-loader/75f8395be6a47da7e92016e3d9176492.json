{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projects\\\\Demo\\\\src\\\\context\\\\FirebaseContext.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, createContext } from \"react\";\nimport firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport config from \"../config/firebase\";\nvar FirebaseContext = createContext();\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nvar db = firebase.firestore();\nvar Firebase = {\n  getCurrentUser: function getCurrentUser() {\n    return firebase.auth().currentUser;\n  },\n  createUser: function createUser(user) {\n    var uid, profilePhotoUrl;\n    return _regeneratorRuntime.async(function createUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(user.email, user.password));\n\n          case 3:\n            uid = Firebase.getCurrentUser().uid;\n            profilePhotoUrl = \"default\";\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(db.collection(\"users\").doc(uid).set({\n              username: user.username,\n              email: user.email,\n              profilePhotoUrl: profilePhotoUrl\n            }));\n\n          case 7:\n            if (!user.profilePhoto) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(Firebase.uploadProfilePhoto(user.profilePhoto));\n\n          case 10:\n            profilePhotoUrl = _context.sent;\n\n          case 11:\n            delete user.password;\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, user), {}, {\n              profilePhotoUrl: profilePhotoUrl,\n              uid: uid\n            }));\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error @createuser: \", _context.t0.message);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  },\n  uploadProfilePhoto: function uploadProfilePhoto(uri) {\n    var uid, photo, imageRef, url;\n    return _regeneratorRuntime.async(function uploadProfilePhoto$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            uid = Firebase.getCurrentUser().uid;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(Firebase.getBlob(uri));\n\n          case 4:\n            photo = _context2.sent;\n            imageRef = firebase.storage().ref(\"profilePhotos\").child(uid);\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(imageRef.put(photo));\n\n          case 8:\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(imageRef.getDownloadURL());\n\n          case 10:\n            url = _context2.sent;\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(db.collection(\"users\").doc(uid).update({\n              profilePhotoUrl: url\n            }));\n\n          case 13:\n            return _context2.abrupt(\"return\", url);\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log(\"Error @uploadProfilePhoto\", _context2.t0);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 16]], Promise);\n  },\n  getBlob: function getBlob(uri) {\n    return _regeneratorRuntime.async(function getBlob$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n              var xhr = new XMLHttpRequest();\n\n              xhr.onload = function () {\n                resolve(xhr.response);\n              };\n\n              xhr.onerror = function () {\n                reject(new TypeError(\"Network Request failed\"));\n              };\n\n              xhr.responseType = \"blob\";\n              xhr.open(\"GET\", uri, true);\n              xhr.send(null);\n            }));\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  getUserInfo: function getUserInfo(uid) {\n    var user;\n    return _regeneratorRuntime.async(function getUserInfo$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(db.collection(\"users\").doc(uid).get());\n\n          case 3:\n            user = _context4.sent;\n\n            if (!user.exists) {\n              _context4.next = 6;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", user.data());\n\n          case 6:\n            _context4.next = 11;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(\"error @getUserInfo: \", _context4.t0);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  },\n  logOut: function logOut() {\n    return _regeneratorRuntime.async(function logOut$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(firebase.auth().signOut());\n\n          case 3:\n            return _context5.abrupt(\"return\", true);\n\n          case 6:\n            _context5.prev = 6;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.log(\"Error @logout: \", _context5.t0);\n\n          case 9:\n            return _context5.abrupt(\"return\", false);\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  },\n  signIn: function signIn(email, password) {\n    return _regeneratorRuntime.async(function signIn$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", firebase.auth().signInWithEmailAndPassword(email, password));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};\n\nvar FirebaseProvider = function FirebaseProvider(props) {\n  return React.createElement(FirebaseContext.Provider, {\n    value: Firebase,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport { FirebaseContext, FirebaseProvider };","map":{"version":3,"sources":["C:/Projects/Demo/src/context/FirebaseContext.js"],"names":["React","useState","useContext","createContext","firebase","config","FirebaseContext","apps","length","initializeApp","db","firestore","Firebase","getCurrentUser","auth","currentUser","createUser","user","createUserWithEmailAndPassword","email","password","uid","profilePhotoUrl","collection","doc","set","username","profilePhoto","uploadProfilePhoto","console","log","message","uri","getBlob","photo","imageRef","storage","ref","child","put","getDownloadURL","url","update","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","getUserInfo","get","exists","data","logOut","signOut","signIn","signInWithEmailAndPassword","FirebaseProvider","props","children"],"mappings":"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","sourcesContent":["import React, { useState, useContext, createContext } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport config from \"../config/firebase\";\r\n\r\nconst FirebaseContext = createContext();\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(config);\r\n}\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst Firebase = {\r\n  getCurrentUser: () => {\r\n    return firebase.auth().currentUser;\r\n  },\r\n\r\n  createUser: async (user) => {\r\n    try {\r\n      await firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(user.email, user.password);\r\n      const uid = Firebase.getCurrentUser().uid;\r\n\r\n      let profilePhotoUrl = \"default\";\r\n\r\n      await db.collection(\"users\").doc(uid).set({\r\n        username: user.username,\r\n        email: user.email,\r\n        profilePhotoUrl,\r\n      });\r\n\r\n      if (user.profilePhoto) {\r\n        profilePhotoUrl = await Firebase.uploadProfilePhoto(user.profilePhoto);\r\n      }\r\n\r\n      delete user.password;\r\n\r\n      return { ...user, profilePhotoUrl, uid };\r\n    } catch (error) {\r\n      console.log(\"error @createuser: \", error.message);\r\n    }\r\n  },\r\n\r\n  uploadProfilePhoto: async (uri) => {\r\n    const uid = Firebase.getCurrentUser().uid;\r\n\r\n    try {\r\n      const photo = await Firebase.getBlob(uri);\r\n\r\n      const imageRef = firebase.storage().ref(\"profilePhotos\").child(uid);\r\n      await imageRef.put(photo);\r\n\r\n      const url = await imageRef.getDownloadURL();\r\n\r\n      await db.collection(\"users\").doc(uid).update({\r\n        profilePhotoUrl: url,\r\n      });\r\n\r\n      return url;\r\n    } catch (error) {\r\n      console.log(\"Error @uploadProfilePhoto\", error);\r\n    }\r\n  },\r\n\r\n  getBlob: async (uri) => {\r\n    return await new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n\r\n      xhr.onload = () => {\r\n        resolve(xhr.response);\r\n      };\r\n\r\n      xhr.onerror = () => {\r\n        reject(new TypeError(\"Network Request failed\"));\r\n      };\r\n\r\n      xhr.responseType = \"blob\";\r\n      xhr.open(\"GET\", uri, true);\r\n      xhr.send(null);\r\n    });\r\n  },\r\n\r\n  getUserInfo: async (uid) => {\r\n    try {\r\n      const user = await db.collection(\"users\").doc(uid).get();\r\n\r\n      if (user.exists) {\r\n        return user.data();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error @getUserInfo: \", error);\r\n    }\r\n  },\r\n\r\n  logOut: async () => {\r\n    try {\r\n      await firebase.auth().signOut();\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.log(\"Error @logout: \", error);\r\n    }\r\n    return false;\r\n  },\r\n\r\n  signIn: async (email, password) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, password);\r\n  },\r\n};\r\n\r\nconst FirebaseProvider = (props) => {\r\n  return (\r\n    <FirebaseContext.Provider value={Firebase}>\r\n      {props.children}\r\n    </FirebaseContext.Provider>\r\n  );\r\n};\r\n\r\nexport { FirebaseContext, FirebaseProvider };\r\n"]},"metadata":{},"sourceType":"module"}