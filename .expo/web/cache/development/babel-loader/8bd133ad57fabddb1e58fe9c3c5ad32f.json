{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\vistr\\\\Desktop\\\\Demo\\\\src\\\\stacks\\\\AppStackScreens.js\";\n\nimport React, { useContext } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { UserContext } from \"../context/UserContext\";\nimport AuthStackScreens from \"./AuthStackScreens\";\nimport MainStackScreens from \"./MainStackScreens\";\nimport LoadingScreen from \"../screens/LoadingScreen\";\nexport default AppStackScreens = function AppStackScreens() {\n  var AppStack = createStackNavigator();\n\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 1),\n      user = _useContext2[0];\n\n  return React.createElement(AppStack.Navigator, {\n    headerMode: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, user.isLoggedIn === null ? React.createElement(AppStack.Screen, {\n    name: \"Loading\",\n    component: LoadingScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }) : user.isLoggedIn ? React.createElement(AppStack.Screen, {\n    name: \"Main\",\n    component: MainStackScreens,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }) : React.createElement(AppStack.Screen, {\n    name: \"Auth\",\n    component: AuthStackScreens,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/vistr/Desktop/Demo/src/stacks/AppStackScreens.js"],"names":["React","useContext","createStackNavigator","UserContext","AuthStackScreens","MainStackScreens","LoadingScreen","AppStackScreens","AppStack","user","isLoggedIn"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,SAASC,WAAT;AAEA,OAAOC,gBAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,aAAP;AAEA,eAAeC,eAAe,GAAG,2BAAM;AACrC,MAAMC,QAAQ,GAAGN,oBAAoB,EAArC;;AADqC,oBAEtBD,UAAU,CAACE,WAAD,CAFY;AAAA;AAAA,MAE9BM,IAF8B;;AAIrC,SACE,oBAAC,QAAD,CAAU,SAAV;AAAoB,IAAA,UAAU,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACC,UAAL,KAAoB,IAApB,GACC,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,IAAI,EAAC,SAAtB;AAAgC,IAAA,SAAS,EAAEJ,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEGG,IAAI,CAACC,UAAL,GACF,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,SAAS,EAAEL,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,GAGF,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,SAAS,EAAED,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADF;AAWD,CAfD","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport { UserContext } from \"../context/UserContext\";\r\n\r\nimport AuthStackScreens from \"./AuthStackScreens\";\r\nimport MainStackScreens from \"./MainStackScreens\";\r\nimport LoadingScreen from \"../screens/LoadingScreen\";\r\n\r\nexport default AppStackScreens = () => {\r\n  const AppStack = createStackNavigator();\r\n  const [user] = useContext(UserContext);\r\n\r\n  return (\r\n    <AppStack.Navigator headerMode=\"none\">\r\n      {user.isLoggedIn === null ? (\r\n        <AppStack.Screen name=\"Loading\" component={LoadingScreen} />\r\n      ) : user.isLoggedIn ? (\r\n        <AppStack.Screen name=\"Main\" component={MainStackScreens} />\r\n      ) : (\r\n        <AppStack.Screen name=\"Auth\" component={AuthStackScreens} />\r\n      )}\r\n    </AppStack.Navigator>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}